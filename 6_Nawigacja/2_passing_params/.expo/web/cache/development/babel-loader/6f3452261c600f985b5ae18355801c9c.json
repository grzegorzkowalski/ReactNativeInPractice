{"ast":null,"code":"import * as React from 'react';\nimport NavigationRouteContext from \"./NavigationRouteContext\";\nexport default function useRoute() {\n  var route = React.useContext(NavigationRouteContext);\n  if (route === undefined) {\n    throw new Error(\"Couldn't find a route object. Is your component inside a screen in a navigator?\");\n  }\n  return route;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,sBAAP;AAQA,eAAe,SAASC,QAAT,GAER;EACL,IAAMC,KAAK,GAAGH,KAAK,CAACI,UAAN,CAAiBH,sBAAjB,CAAd;EAEA,IAAIE,KAAK,KAAKE,SAAd,EAAyB;IACvB,MAAM,IAAIC,KAAJ,CACJ,iFADI,CAAN;EAGD;EAED,OAAOH,KAAP;AACD","names":["React","NavigationRouteContext","useRoute","route","useContext","undefined","Error"],"sources":["useRoute.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { ParamListBase } from '@react-navigation/routers';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { RouteProp } from './types';\n\n/**\n * Hook to access the route prop of the parent screen anywhere.\n *\n * @returns Route prop of the parent screen.\n */\nexport default function useRoute<\n  T extends RouteProp<ParamListBase, string>\n>(): T {\n  const route = React.useContext(NavigationRouteContext);\n\n  if (route === undefined) {\n    throw new Error(\n      \"Couldn't find a route object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  return route as T;\n}\n"]},"metadata":{},"sourceType":"module"}