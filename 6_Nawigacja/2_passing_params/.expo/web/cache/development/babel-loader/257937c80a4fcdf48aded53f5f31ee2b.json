{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport { defineAnimation } from \"./util\";\nimport { withTiming } from \"./timing\";\nimport { ColorProperties } from \"../UpdateProps\";\nimport { processColor } from \"../Colors\";\nexport function resolvePath(obj, path) {\n  'worklet';\n\n  var keys = Array.isArray(path) ? path : [path];\n  return keys.reduce(function (acc, current) {\n    if (Array.isArray(acc) && typeof current === 'number') {\n      return acc[current];\n    } else if (typeof acc === 'object' && current in acc) {\n      return acc[current];\n    }\n    return undefined;\n  }, obj);\n}\nexport function setPath(obj, path, value) {\n  'worklet';\n\n  var keys = Array.isArray(path) ? path : [path];\n  var currObj = obj;\n  for (var i = 0; i < keys.length - 1; i++) {\n    currObj = currObj;\n    if (!currObj[keys[i]]) {\n      if (typeof keys[i + 1] === 'number') {\n        currObj[keys[i]] = [];\n      } else {\n        currObj[keys[i]] = {};\n      }\n    }\n    currObj = currObj[keys[i]];\n  }\n  currObj[keys[keys.length - 1]] = value;\n}\nexport function withStyleAnimation(styleAnimations) {\n  'worklet';\n\n  return defineAnimation({}, function () {\n    'worklet';\n\n    var onFrame = function onFrame(animation, now) {\n      var stillGoing = false;\n      var entriesToCheck = [{\n        value: animation.styleAnimations,\n        path: []\n      }];\n      while (entriesToCheck.length > 0) {\n        var currentEntry = entriesToCheck.pop();\n        if (Array.isArray(currentEntry.value)) {\n          for (var index = 0; index < currentEntry.value.length; index++) {\n            entriesToCheck.push({\n              value: currentEntry.value[index],\n              path: currentEntry.path.concat(index)\n            });\n          }\n        } else if (typeof currentEntry.value === 'object' && currentEntry.value.onFrame === undefined) {\n          for (var _i = 0, _Object$keys = Object.keys(currentEntry.value); _i < _Object$keys.length; _i++) {\n            var key = _Object$keys[_i];\n            entriesToCheck.push({\n              value: currentEntry.value[key],\n              path: currentEntry.path.concat(key)\n            });\n          }\n        } else {\n          var currentStyleAnimation = currentEntry.value;\n          if (currentStyleAnimation.finished) {\n            continue;\n          }\n          var finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n          if (finished) {\n            currentStyleAnimation.finished = true;\n            if (currentStyleAnimation.callback) {\n              currentStyleAnimation.callback(true);\n            }\n          } else {\n            stillGoing = true;\n          }\n          if (ColorProperties.includes(currentEntry.path[0])) {\n            currentStyleAnimation.current = processColor(currentStyleAnimation.current);\n          }\n          setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\n        }\n      }\n      return !stillGoing;\n    };\n    var onStart = function onStart(animation, value, now, previousAnimation) {\n      var entriesToCheck = [{\n        value: styleAnimations,\n        path: []\n      }];\n      while (entriesToCheck.length > 0) {\n        var currentEntry = entriesToCheck.pop();\n        if (Array.isArray(currentEntry.value)) {\n          for (var index = 0; index < currentEntry.value.length; index++) {\n            entriesToCheck.push({\n              value: currentEntry.value[index],\n              path: currentEntry.path.concat(index)\n            });\n          }\n        } else if (typeof currentEntry.value === 'object' && currentEntry.value.onStart === undefined) {\n          for (var _i2 = 0, _Object$keys2 = Object.keys(currentEntry.value); _i2 < _Object$keys2.length; _i2++) {\n            var key = _Object$keys2[_i2];\n            entriesToCheck.push({\n              value: currentEntry.value[key],\n              path: currentEntry.path.concat(key)\n            });\n          }\n        } else {\n          var prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n          var prevVal = resolvePath(value, currentEntry.path);\n          if (prevAnimation && !prevVal) {\n            prevVal = prevAnimation.current;\n          }\n          setPath(animation.current, currentEntry.path, prevVal);\n          var currentAnimation = void 0;\n          if (typeof currentEntry.value !== 'object' || !currentEntry.value.onStart) {\n            currentAnimation = withTiming(currentEntry.value, {\n              duration: 0\n            });\n            setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n          } else {\n            currentAnimation = currentEntry.value;\n          }\n          currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n        }\n      }\n    };\n    var callback = function callback(finished) {\n      if (!finished) {\n        var animationsToCheck = [styleAnimations];\n        while (animationsToCheck.length > 0) {\n          var currentAnimation = animationsToCheck.pop();\n          if (Array.isArray(currentAnimation)) {\n            for (var _iterator = _createForOfIteratorHelperLoose(currentAnimation), _step; !(_step = _iterator()).done;) {\n              var element = _step.value;\n              animationsToCheck.push(element);\n            }\n          } else if (typeof currentAnimation === 'object' && currentAnimation.onStart === undefined) {\n            for (var _i3 = 0, _Object$values = Object.values(currentAnimation); _i3 < _Object$values.length; _i3++) {\n              var value = _Object$values[_i3];\n              animationsToCheck.push(value);\n            }\n          } else {\n            var currentStyleAnimation = currentAnimation;\n            if (!currentStyleAnimation.finished && currentStyleAnimation.callback) {\n              currentStyleAnimation.callback(false);\n            }\n          }\n        }\n      }\n    };\n    return {\n      isHigherOrder: true,\n      onFrame: onFrame,\n      onStart: onStart,\n      current: {},\n      styleAnimations: styleAnimations,\n      callback: callback\n    };\n  });\n}","map":{"version":3,"names":["defineAnimation","withTiming","ColorProperties","processColor","resolvePath","obj","path","keys","Array","isArray","reduce","acc","current","undefined","setPath","value","currObj","i","length","withStyleAnimation","styleAnimations","onFrame","animation","now","stillGoing","entriesToCheck","currentEntry","pop","index","push","concat","Object","key","currentStyleAnimation","finished","callback","includes","onStart","previousAnimation","prevAnimation","prevVal","currentAnimation","duration","animationsToCheck","element","values","isHigherOrder"],"sources":["D:/szkolenia/ReactNativewPraktyce_12_14_12_2022/ReactNativeInPractice/6_Nawigacja/2_passing_params/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js"],"sourcesContent":["import { defineAnimation } from './util';\nimport { withTiming } from './timing';\nimport { ColorProperties } from '../UpdateProps';\nimport { processColor } from '../Colors';\n// resolves path to value for nested objects\n// if path cannot be resolved returns undefined\nexport function resolvePath(obj, path) {\n    'worklet';\n    const keys = Array.isArray(path) ? path : [path];\n    return keys.reduce((acc, current) => {\n        if (Array.isArray(acc) && typeof current === 'number') {\n            return acc[current];\n        }\n        else if (typeof acc === 'object' && current in acc) {\n            return acc[current];\n        }\n        return undefined;\n    }, obj);\n}\nexport function setPath(obj, path, value) {\n    'worklet';\n    const keys = Array.isArray(path) ? path : [path];\n    let currObj = obj;\n    for (let i = 0; i < keys.length - 1; i++) {\n        // creates entry if there isn't one\n        currObj = currObj;\n        if (!currObj[keys[i]]) {\n            // if next key is a number create an array\n            if (typeof keys[i + 1] === 'number') {\n                currObj[keys[i]] = [];\n            }\n            else {\n                currObj[keys[i]] = {};\n            }\n        }\n        currObj = currObj[keys[i]];\n    }\n    currObj[keys[keys.length - 1]] =\n        value;\n}\nexport function withStyleAnimation(styleAnimations) {\n    'worklet';\n    return defineAnimation({}, () => {\n        'worklet';\n        const onFrame = (animation, now) => {\n            let stillGoing = false;\n            const entriesToCheck = [\n                { value: animation.styleAnimations, path: [] },\n            ];\n            while (entriesToCheck.length > 0) {\n                const currentEntry = entriesToCheck.pop();\n                if (Array.isArray(currentEntry.value)) {\n                    for (let index = 0; index < currentEntry.value.length; index++) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[index],\n                            path: currentEntry.path.concat(index),\n                        });\n                    }\n                }\n                else if (typeof currentEntry.value === 'object' &&\n                    currentEntry.value.onFrame === undefined) {\n                    // nested object\n                    for (const key of Object.keys(currentEntry.value)) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[key],\n                            path: currentEntry.path.concat(key),\n                        });\n                    }\n                }\n                else {\n                    const currentStyleAnimation = currentEntry.value;\n                    if (currentStyleAnimation.finished) {\n                        continue;\n                    }\n                    const finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n                    if (finished) {\n                        currentStyleAnimation.finished = true;\n                        if (currentStyleAnimation.callback) {\n                            currentStyleAnimation.callback(true);\n                        }\n                    }\n                    else {\n                        stillGoing = true;\n                    }\n                    if (ColorProperties.includes(currentEntry.path[0])) {\n                        currentStyleAnimation.current = processColor(currentStyleAnimation.current);\n                    }\n                    setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\n                }\n            }\n            return !stillGoing;\n        };\n        const onStart = (animation, value, now, previousAnimation) => {\n            const entriesToCheck = [{ value: styleAnimations, path: [] }];\n            while (entriesToCheck.length > 0) {\n                const currentEntry = entriesToCheck.pop();\n                if (Array.isArray(currentEntry.value)) {\n                    for (let index = 0; index < currentEntry.value.length; index++) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[index],\n                            path: currentEntry.path.concat(index),\n                        });\n                    }\n                }\n                else if (typeof currentEntry.value === 'object' &&\n                    currentEntry.value.onStart === undefined) {\n                    for (const key of Object.keys(currentEntry.value)) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[key],\n                            path: currentEntry.path.concat(key),\n                        });\n                    }\n                }\n                else {\n                    const prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n                    let prevVal = resolvePath(value, currentEntry.path);\n                    if (prevAnimation && !prevVal) {\n                        prevVal = prevAnimation.current;\n                    }\n                    setPath(animation.current, currentEntry.path, prevVal);\n                    let currentAnimation;\n                    if (typeof currentEntry.value !== 'object' ||\n                        !currentEntry.value.onStart) {\n                        currentAnimation = withTiming(currentEntry.value, { duration: 0 });\n                        setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n                    }\n                    else {\n                        currentAnimation = currentEntry.value;\n                    }\n                    currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n                }\n            }\n        };\n        const callback = (finished) => {\n            if (!finished) {\n                const animationsToCheck = [\n                    styleAnimations,\n                ];\n                while (animationsToCheck.length > 0) {\n                    const currentAnimation = animationsToCheck.pop();\n                    if (Array.isArray(currentAnimation)) {\n                        for (const element of currentAnimation) {\n                            animationsToCheck.push(element);\n                        }\n                    }\n                    else if (typeof currentAnimation === 'object' &&\n                        currentAnimation.onStart === undefined) {\n                        for (const value of Object.values(currentAnimation)) {\n                            animationsToCheck.push(value);\n                        }\n                    }\n                    else {\n                        const currentStyleAnimation = currentAnimation;\n                        if (!currentStyleAnimation.finished &&\n                            currentStyleAnimation.callback) {\n                            currentStyleAnimation.callback(false);\n                        }\n                    }\n                }\n            }\n        };\n        return {\n            isHigherOrder: true,\n            onFrame,\n            onStart,\n            current: {},\n            styleAnimations,\n            callback,\n        };\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}