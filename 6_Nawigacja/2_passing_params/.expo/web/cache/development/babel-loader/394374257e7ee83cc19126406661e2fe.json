{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { convertToHSVA, isColor, toRGBA } from \"../Colors\";\nimport NativeReanimatedModule from \"../NativeReanimated\";\nvar IN_STYLE_UPDATER = false;\nexport function initialUpdaterRun(updater) {\n  IN_STYLE_UPDATER = true;\n  var result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\nfunction recognizePrefixSuffix(value) {\n  'worklet';\n\n  var _a;\n  if (typeof value === 'string') {\n    var match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\n    if (!match) {\n      throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");\n    }\n    var prefix = match[1];\n    var suffix = match[4];\n    var number = match[2] + ((_a = match[3]) !== null && _a !== void 0 ? _a : '');\n    return {\n      prefix: prefix,\n      suffix: suffix,\n      strippedValue: parseFloat(number)\n    };\n  } else {\n    return {\n      strippedValue: value\n    };\n  }\n}\nfunction decorateAnimation(animation) {\n  'worklet';\n\n  if (animation.isHigherOrder) {\n    return;\n  }\n  var baseOnStart = animation.onStart;\n  var baseOnFrame = animation.onFrame;\n  var animationCopy = _extends({}, animation);\n  delete animationCopy.callback;\n  var prefNumberSuffOnStart = function prefNumberSuffOnStart(animation, value, timestamp, previousAnimation) {\n    var _a, _b, _c, _d;\n    var _recognizePrefixSuffi = recognizePrefixSuffix(value),\n      prefix = _recognizePrefixSuffi.prefix,\n      suffix = _recognizePrefixSuffi.suffix,\n      strippedValue = _recognizePrefixSuffi.strippedValue;\n    animation.__prefix = prefix;\n    animation.__suffix = suffix;\n    animation.strippedCurrent = strippedValue;\n    var _recognizePrefixSuffi2 = recognizePrefixSuffix(animation.toValue),\n      strippedToValue = _recognizePrefixSuffi2.strippedValue;\n    animation.current = strippedValue;\n    animation.startValue = strippedValue;\n    animation.toValue = strippedToValue;\n    if (previousAnimation && previousAnimation !== animation) {\n      previousAnimation.current = previousAnimation.strippedCurrent;\n    }\n    baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n    animation.current = ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') + animation.current + ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n    if (previousAnimation && previousAnimation !== animation) {\n      previousAnimation.current = ((_c = previousAnimation.__prefix) !== null && _c !== void 0 ? _c : '') + previousAnimation.current + ((_d = previousAnimation.__suffix) !== null && _d !== void 0 ? _d : '');\n    }\n  };\n  var prefNumberSuffOnFrame = function prefNumberSuffOnFrame(animation, timestamp) {\n    var _a, _b;\n    animation.current = animation.strippedCurrent;\n    var res = baseOnFrame(animation, timestamp);\n    animation.strippedCurrent = animation.current;\n    animation.current = ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') + animation.current + ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n    return res;\n  };\n  var tab = ['H', 'S', 'V', 'A'];\n  var colorOnStart = function colorOnStart(animation, value, timestamp, previousAnimation) {\n    var HSVAValue;\n    var HSVACurrent;\n    var HSVAToValue;\n    var res = [];\n    if (isColor(value)) {\n      HSVACurrent = convertToHSVA(animation.current);\n      HSVAValue = convertToHSVA(value);\n      if (animation.toValue) {\n        HSVAToValue = convertToHSVA(animation.toValue);\n      }\n    }\n    tab.forEach(function (i, index) {\n      animation[i] = _extends({}, animationCopy);\n      animation[i].current = HSVACurrent[index];\n      animation[i].toValue = HSVAToValue ? HSVAToValue[index] : undefined;\n      animation[i].onStart(animation[i], HSVAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n      res.push(animation[i].current);\n    });\n    animation.current = toRGBA(res);\n  };\n  var colorOnFrame = function colorOnFrame(animation, timestamp) {\n    var HSVACurrent = convertToHSVA(animation.current);\n    var res = [];\n    var finished = true;\n    tab.forEach(function (i, index) {\n      animation[i].current = HSVACurrent[index];\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      res.push(animation[i].current);\n    });\n    animation.current = toRGBA(res);\n    return finished;\n  };\n  var arrayOnStart = function arrayOnStart(animation, value, timestamp, previousAnimation) {\n    value.forEach(function (v, i) {\n      animation[i] = _extends({}, animationCopy);\n      animation[i].current = v;\n      animation[i].toValue = animation.toValue[i];\n      animation[i].onStart(animation[i], v, timestamp, previousAnimation ? previousAnimation[i] : undefined);\n    });\n    animation.current = value;\n  };\n  var arrayOnFrame = function arrayOnFrame(animation, timestamp) {\n    var finished = true;\n    animation.current.forEach(function (v, i) {\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      animation.current[i] = animation[i].current;\n    });\n    return finished;\n  };\n  animation.onStart = function (animation, value, timestamp, previousAnimation) {\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (Array.isArray(value)) {\n      arrayOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = arrayOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    }\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\nexport function defineAnimation(starting, factory) {\n  'worklet';\n\n  if (IN_STYLE_UPDATER) {\n    return starting;\n  }\n  var create = function create() {\n    'worklet';\n\n    var animation = factory();\n    decorateAnimation(animation);\n    return animation;\n  };\n  if (_WORKLET || !NativeReanimatedModule.native) {\n    return create();\n  }\n  return create;\n}\nexport function cancelAnimation(sharedValue) {\n  'worklet';\n  sharedValue.value = sharedValue.value;\n}\nexport function withStartValue(startValue, animation) {\n  'worklet';\n\n  return defineAnimation(startValue, function () {\n    'worklet';\n\n    if (!_WORKLET && typeof animation === 'function') {\n      animation = animation();\n    }\n    animation.current = startValue;\n    return animation;\n  });\n}","map":{"version":3,"names":["convertToHSVA","isColor","toRGBA","NativeReanimatedModule","IN_STYLE_UPDATER","initialUpdaterRun","updater","result","recognizePrefixSuffix","value","_a","match","Error","prefix","suffix","number","strippedValue","parseFloat","decorateAnimation","animation","isHigherOrder","baseOnStart","onStart","baseOnFrame","onFrame","animationCopy","callback","prefNumberSuffOnStart","timestamp","previousAnimation","_b","_c","_d","__prefix","__suffix","strippedCurrent","toValue","strippedToValue","current","startValue","prefNumberSuffOnFrame","res","tab","colorOnStart","HSVAValue","HSVACurrent","HSVAToValue","forEach","i","index","undefined","push","colorOnFrame","finished","arrayOnStart","v","arrayOnFrame","Array","isArray","defineAnimation","starting","factory","create","_WORKLET","native","cancelAnimation","sharedValue","withStartValue"],"sources":["D:/szkolenia/ReactNativewPraktyce_12_14_12_2022/ReactNativeInPractice/6_Nawigacja/2_passing_params/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js"],"sourcesContent":["/* global _WORKLET */\nimport { convertToHSVA, isColor, toRGBA } from '../Colors';\nimport NativeReanimatedModule from '../NativeReanimated';\nlet IN_STYLE_UPDATER = false;\nexport function initialUpdaterRun(updater) {\n    IN_STYLE_UPDATER = true;\n    const result = updater();\n    IN_STYLE_UPDATER = false;\n    return result;\n}\nfunction recognizePrefixSuffix(value) {\n    'worklet';\n    var _a;\n    if (typeof value === 'string') {\n        const match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\n        if (!match) {\n            throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");\n        }\n        const prefix = match[1];\n        const suffix = match[4];\n        // number with scientific notation\n        const number = match[2] + ((_a = match[3]) !== null && _a !== void 0 ? _a : '');\n        return { prefix, suffix, strippedValue: parseFloat(number) };\n    }\n    else {\n        return { strippedValue: value };\n    }\n}\nfunction decorateAnimation(animation) {\n    'worklet';\n    if (animation.isHigherOrder) {\n        return;\n    }\n    const baseOnStart = animation.onStart;\n    const baseOnFrame = animation.onFrame;\n    const animationCopy = Object.assign({}, animation);\n    delete animationCopy.callback;\n    const prefNumberSuffOnStart = (animation, value, timestamp, previousAnimation) => {\n        var _a, _b, _c, _d;\n        // recognize prefix, suffix, and updates stripped value on animation start\n        const { prefix, suffix, strippedValue } = recognizePrefixSuffix(value);\n        animation.__prefix = prefix;\n        animation.__suffix = suffix;\n        animation.strippedCurrent = strippedValue;\n        const { strippedValue: strippedToValue } = recognizePrefixSuffix(animation.toValue);\n        animation.current = strippedValue;\n        animation.startValue = strippedValue;\n        animation.toValue = strippedToValue;\n        if (previousAnimation && previousAnimation !== animation) {\n            previousAnimation.current = previousAnimation.strippedCurrent;\n        }\n        baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n        animation.current =\n            ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') +\n                animation.current +\n                ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n        if (previousAnimation && previousAnimation !== animation) {\n            previousAnimation.current =\n                ((_c = previousAnimation.__prefix) !== null && _c !== void 0 ? _c : '') +\n                    previousAnimation.current +\n                    ((_d = previousAnimation.__suffix) !== null && _d !== void 0 ? _d : '');\n        }\n    };\n    const prefNumberSuffOnFrame = (animation, timestamp) => {\n        var _a, _b;\n        animation.current = animation.strippedCurrent;\n        const res = baseOnFrame(animation, timestamp);\n        animation.strippedCurrent = animation.current;\n        animation.current =\n            ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') +\n                animation.current +\n                ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n        return res;\n    };\n    const tab = ['H', 'S', 'V', 'A'];\n    const colorOnStart = (animation, value, timestamp, previousAnimation) => {\n        let HSVAValue;\n        let HSVACurrent;\n        let HSVAToValue;\n        const res = [];\n        if (isColor(value)) {\n            HSVACurrent = convertToHSVA(animation.current);\n            HSVAValue = convertToHSVA(value);\n            if (animation.toValue) {\n                HSVAToValue = convertToHSVA(animation.toValue);\n            }\n        }\n        tab.forEach((i, index) => {\n            animation[i] = Object.assign({}, animationCopy);\n            animation[i].current = HSVACurrent[index];\n            animation[i].toValue = HSVAToValue ? HSVAToValue[index] : undefined;\n            animation[i].onStart(animation[i], HSVAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n            res.push(animation[i].current);\n        });\n        animation.current = toRGBA(res);\n    };\n    const colorOnFrame = (animation, timestamp) => {\n        const HSVACurrent = convertToHSVA(animation.current);\n        const res = [];\n        let finished = true;\n        tab.forEach((i, index) => {\n            animation[i].current = HSVACurrent[index];\n            // @ts-ignore: disable-next-line\n            finished &= animation[i].onFrame(animation[i], timestamp);\n            res.push(animation[i].current);\n        });\n        animation.current = toRGBA(res);\n        return finished;\n    };\n    const arrayOnStart = (animation, value, timestamp, previousAnimation) => {\n        value.forEach((v, i) => {\n            animation[i] = Object.assign({}, animationCopy);\n            animation[i].current = v;\n            animation[i].toValue = animation.toValue[i];\n            animation[i].onStart(animation[i], v, timestamp, previousAnimation ? previousAnimation[i] : undefined);\n        });\n        animation.current = value;\n    };\n    const arrayOnFrame = (animation, timestamp) => {\n        let finished = true;\n        animation.current.forEach((v, i) => {\n            // @ts-ignore: disable-next-line\n            finished &= animation[i].onFrame(animation[i], timestamp);\n            animation.current[i] = animation[i].current;\n        });\n        return finished;\n    };\n    animation.onStart = (animation, value, timestamp, previousAnimation) => {\n        if (isColor(value)) {\n            colorOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = colorOnFrame;\n            return;\n        }\n        else if (Array.isArray(value)) {\n            arrayOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = arrayOnFrame;\n            return;\n        }\n        else if (typeof value === 'string') {\n            prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = prefNumberSuffOnFrame;\n            return;\n        }\n        baseOnStart(animation, value, timestamp, previousAnimation);\n    };\n}\nexport function defineAnimation(starting, factory) {\n    'worklet';\n    if (IN_STYLE_UPDATER) {\n        return starting;\n    }\n    const create = () => {\n        'worklet';\n        const animation = factory();\n        decorateAnimation(animation);\n        return animation;\n    };\n    if (_WORKLET || !NativeReanimatedModule.native) {\n        return create();\n    }\n    // @ts-ignore: eslint-disable-line\n    return create;\n}\nexport function cancelAnimation(sharedValue) {\n    'worklet';\n    // setting the current value cancels the animation if one is currently running\n    sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\n// TODO it should work only if there was no animation before.\nexport function withStartValue(startValue, animation) {\n    'worklet';\n    return defineAnimation(startValue, () => {\n        'worklet';\n        if (!_WORKLET && typeof animation === 'function') {\n            animation = animation();\n        }\n        animation.current = startValue;\n        return animation;\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}