{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { createContext } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport HomeScreen from \"./components/screens/HomeScreen\";\nimport AboutUsScreen from \"./components/screens/AboutUsScreen\";\nimport ContactScreen from \"./components/screens/ContactScreen\";\nimport FunScreen from \"./components/screens/FunScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialValue = {\n  headerStyle: '#21094e',\n  headerTintColor: '#ec1d23'\n};\nvar ThemeContext = createContext(_objectSpread(_objectSpread({}, initialValue), {}, {\n  updateContext: function updateContext() {}\n}));\nvar Stack = new createStackNavigator();\nexport default function App() {\n  return _jsx(ThemeContext.Provider, {\n    value: initialValue,\n    children: _jsx(NavigationContainer, {\n      children: _jsx(Stack.Navigator, {\n        children: _jsx(ThemeContext.Consumer, {\n          children: function children(context) {\n            return _jsxs(_Fragment, {\n              children: [_jsx(Stack.Screen, {\n                name: \"Home\",\n                component: HomeScreen,\n                options: {\n                  headerStyle: {\n                    backgroundColor: context.headerTintColor\n                  },\n                  headerTintColor: context.headerTintColor,\n                  headerRight: function headerRight() {\n                    return _jsx(Image, {\n                      source: \"https://bi.im-g.pl/ldpic/participant/8673/logo/teamlogo_s1_26301.png\",\n                      style: {\n                        width: 50,\n                        height: 50\n                      }\n                    });\n                  }\n                }\n              }), _jsx(Stack.Screen, {\n                name: \"About\",\n                component: AboutUsScreen\n              }), _jsx(Stack.Screen, {\n                name: \"Contact\",\n                component: ContactScreen\n              }), _jsx(Stack.Screen, {\n                name: \"Fun\",\n                component: FunScreen\n              })]\n            });\n          }\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","createContext","NavigationContainer","createStackNavigator","HomeScreen","AboutUsScreen","ContactScreen","FunScreen","initialValue","headerStyle","headerTintColor","ThemeContext","updateContext","Stack","App","context","backgroundColor","headerRight","width","height"],"sources":["D:/szkolenia/ReactNativewPraktyce/ReactNativeInPracticeWithStudents/9_Stan_globalny/1_Nawigacja_context/App.js"],"sourcesContent":["import React, { createContext } from 'react';\r\nimport { Image } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport HomeScreen from \"./components/screens/HomeScreen\";\r\nimport AboutUsScreen from \"./components/screens/AboutUsScreen\";\r\nimport ContactScreen from \"./components/screens/ContactScreen\";\r\nimport FunScreen from \"./components/screens/FunScreen\";\r\n\r\nconst initialValue = {\r\n    headerStyle: '#21094e',\r\n    headerTintColor: '#ec1d23'\r\n}\r\nconst ThemeContext = createContext({\r\n    ...initialValue,\r\n    updateContext: () => {}\r\n});\r\nconst Stack = new createStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n      <ThemeContext.Provider value={initialValue}>\r\n          <NavigationContainer>\r\n            <Stack.Navigator>\r\n              <ThemeContext.Consumer>\r\n                  { context => (\r\n                      <>\r\n                          <Stack.Screen\r\n                              name=\"Home\"\r\n                              component={ HomeScreen }\r\n                              options={{\r\n                                  headerStyle: {\r\n                                      backgroundColor: context.headerTintColor\r\n                                  },\r\n                                  headerTintColor: context.headerTintColor,\r\n                                  headerRight: () => { return ( <Image\r\n                                          source={\"https://bi.im-g.pl/ldpic/participant/8673/logo/teamlogo_s1_26301.png\"}\r\n                                          style={{width: 50, height: 50}}\r\n                                      />\r\n                                  )}\r\n                              }}\r\n                          />\r\n                          <Stack.Screen name=\"About\" component={ AboutUsScreen } />\r\n                          <Stack.Screen name=\"Contact\" component={ ContactScreen } />\r\n                          <Stack.Screen name=\"Fun\" component={ FunScreen } />\r\n                      </>\r\n                  )}\r\n              </ThemeContext.Consumer>\r\n            </Stack.Navigator>\r\n          </NavigationContainer>\r\n      </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,SAAP;;;;AAEA,IAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,SADI;EAEjBC,eAAe,EAAE;AAFA,CAArB;AAIA,IAAMC,YAAY,GAAGV,aAAa,iCAC3BO,YAD2B;EAE9BI,aAAa,EAAE,yBAAM,CAAE;AAFO,GAAlC;AAIA,IAAMC,KAAK,GAAG,IAAIV,oBAAJ,EAAd;AAEA,eAAe,SAASW,GAAT,GAAe;EAC5B,OACI,KAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAEN,YAA9B;IAAA,UACI,KAAC,mBAAD;MAAA,UACE,KAAC,KAAD,CAAO,SAAP;QAAA,UACE,KAAC,YAAD,CAAc,QAAd;UAAA,UACM,kBAAAO,OAAO;YAAA,OACL;cAAA,WACI,KAAC,KAAD,CAAO,MAAP;gBACI,IAAI,EAAC,MADT;gBAEI,SAAS,EAAGX,UAFhB;gBAGI,OAAO,EAAE;kBACLK,WAAW,EAAE;oBACTO,eAAe,EAAED,OAAO,CAACL;kBADhB,CADR;kBAILA,eAAe,EAAEK,OAAO,CAACL,eAJpB;kBAKLO,WAAW,EAAE,uBAAM;oBAAE,OAAS,KAAC,KAAD;sBACtB,MAAM,EAAE,sEADc;sBAEtB,KAAK,EAAE;wBAACC,KAAK,EAAE,EAAR;wBAAYC,MAAM,EAAE;sBAApB;oBAFe,EAAT;kBAInB;gBATG;cAHb,EADJ,EAgBI,KAAC,KAAD,CAAO,MAAP;gBAAc,IAAI,EAAC,OAAnB;gBAA2B,SAAS,EAAGd;cAAvC,EAhBJ,EAiBI,KAAC,KAAD,CAAO,MAAP;gBAAc,IAAI,EAAC,SAAnB;gBAA6B,SAAS,EAAGC;cAAzC,EAjBJ,EAkBI,KAAC,KAAD,CAAO,MAAP;gBAAc,IAAI,EAAC,KAAnB;gBAAyB,SAAS,EAAGC;cAArC,EAlBJ;YAAA,EADK;UAAA;QADb;MADF;IADF;EADJ,EADJ;AAgCD"},"metadata":{},"sourceType":"module"}